import pkg_resources
import importlib
import inspect
from packaging import version


# 安全检测工具 Banner
banner = r"""
================================================================================
  _____             _       _           _                 _      _             
 /  ___|           (_)     | |         | |               | |    (_)            
 \ `--.  _ __  _ __ _  __ _| |_ ___  __| | ___  _ __   __| | ___ _             
  `--. \| '_ \| '__| |/ _` | __/ _ \/ _` |/ _ \| '_ \ / _` |/ _ \ |            
 /\__/ / |_) | |  | | (_| | ||  __/ (_| | (_) | | | | (_| |  __/ |            
 \____/| .__/|_|  |_|\__,_|\__\___|\__,_|\___/|_| |_|\__,_|\___|_|            
       | |                                                                    
       |_|                                                                    

  数据投毒漏洞检测工具
  漏洞编号：CVE-2024-3568等
  漏洞安全事件：火山“实习生”数据投毒
  漏洞影响：该漏洞可能影响大模型训练的结果，甚至任意命令可执行
  技术支持：亚信安全人工智能实验室

================================================================================
"""

print(banner)

def get_package_version(package_name):
    """ 获取指定包的版本 """
    try:
        version = pkg_resources.get_distribution(package_name).version
        return version
    except pkg_resources.DistributionNotFound:
        return None

def check_pickle_functions():
    """ 检查环境中是否存在 pickle.load 和 pickle.dump """
    try:
        # 导入 pickle 模块
        import pickle
        
        # 检查 pickle 模块中是否存在 load 和 dump 函数
        has_load = hasattr(pickle, 'load')
        has_dump = hasattr(pickle, 'dump')
        
        return has_load, has_dump
    except ImportError:
        return False, False

def get_magic_methods(obj):
    """ 获取对象的所有魔术方法 """
    magic_methods = [method for method in dir(obj) if method.startswith('__') and method.endswith('__')]
    return magic_methods

def check_reduce_method(obj):
    """ 检查对象中是否存在 __reduce__ 方法 """
    if hasattr(obj, '__reduce__'):
        return True
    return False

def main():
    # 定义所需的版本
    required_transformers_version = '4.37.2'
    required_pytorch_version = '2.4.1'

    # 获取 transformers 的版本
    transformers_version = get_package_version('transformers')
    if transformers_version:
        pass
    else:
        pass

    # 获取 PyTorch 的版本
    pytorch_version = get_package_version('torch')
    if pytorch_version:
        pass
    else:
        pass

    # 检查 pickle.load 和 pickle.dump 是否存在
    has_load, has_dump = check_pickle_functions()
    if has_load and has_dump:
        pass
    else:
        pass

    # 检查版本是否符合要求
    transformers_version_ok = not (transformers_version and version.parse(transformers_version) <= version.parse(required_transformers_version))
    pytorch_version_ok = not (pytorch_version and version.parse(pytorch_version) <= version.parse(required_pytorch_version))

    # 检查是否存在 __reduce__ 方法
    import pickle
    has_reduce = check_reduce_method(pickle.Pickler)

    # 判断是否存在安全风险
    if not transformers_version_ok or not pytorch_version_ok or (has_load and has_dump) or has_reduce:
        print("检测到当前运行环境中存在安全风险！具体特征如下：")
        if not transformers_version_ok:
            print(f"**** 当前 Transformers 版本: {transformers_version},版本较低 ")
        if not pytorch_version_ok:
            print(f"**** 当前 PyTorch 版本: {pytorch_version}，版本较低")
        if has_load and has_dump:
            print("**** 当前代码环境中存在pickle.load 和 pickle.dump等方法，可能被攻击者利用")
        if has_reduce:
            print("**** 当前代码环境中存在 __reduce__ 魔术方法，可能被攻击者重写")
    else:
        print("当前环境未检出到对应漏洞")

if __name__ == "__main__":
    main()